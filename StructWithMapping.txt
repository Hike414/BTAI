// SPDX-License-Identifier: GPL-3.0

pragma solidity 0.8.30;

contract MappingWithStruct
{
   struct Person
    {
        string name;
        uint age;
        address wAdd;
        uint balance;        
    }
    mapping(address => uint) public balances;
    Person[] public perArr;

    constructor() 
    {
        storePerson("Raj",20,0x5B38Da6a701c568545dCfcB03FcB875f56beddC4,100);
        storeInMap(0x5B38Da6a701c568545dCfcB03FcB875f56beddC4,100);
        storePerson("Rahul",25,0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2,90);
        storeInMap(0xAb8483F64d9C6d1EcF9b849Ae677dD3315835cb2,90);
        storePerson("Aman",30,0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db,80);
        storeInMap(0x4B20993Bc481177ec7E8f571ceCaE8A9e22C02db,80);
    }
  function storePerson(string memory _n,uint _a, address _add, uint _b) public 
  {
    Person memory p;
    p.name=_n;
    p.age=_a;
    p.wAdd=_add;
    p.balance=_b;
    perArr.push(p);

  }

  function storeInMap(address _add, uint _b) public 
  {
    balances[_add] = _b;
  }

  function getPersonCount() public view returns (uint)
  {
    return (perArr.length);
  }


}